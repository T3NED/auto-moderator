generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./erd.svg"
}

datasource db {
  provider = "postgresql"
  url      = env("URI_POSTGRESQL")
}

model Guild {
  id String @id @db.VarChar(20)

  modlogCaseId    Int     @default(0) @map("modlog_case_id") @db.Integer
  modlogChannelId String? @map("modlog_channel_id") @db.VarChar(20)

  modlogs Modlog[]

  @@map("guilds")
}

model Modlog {
  id String @id @default(cuid()) @db.Char(32)

  caseId   Int            @map("case_id") @db.Integer
  caseType ModlogCaseType @map("case_type")

  reason Int @db.SmallInt

  offenderId  String  @map("offender_id") @db.VarChar(20)
  moderatorId String  @map("moderator_id") @db.VarChar(20)
  messageId   String? @map("message_id") @db.VarChar(20)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp

  task ModerationTask?

  guildId String @db.VarChar(20)
  guild   Guild  @relation(fields: [guildId], references: [id])

  @@unique([guildId, caseId], name: "modlogId")
  @@map("modlogs")
}

enum ModlogCaseType {
  WARN
  KICK
  MUTE
  UNMUTE
  BAN
  UNBAN
}

model ModerationTask {
  modlogId String @id @map("modlog_id") @db.Char(32)

  duration  Int      @db.Integer
  expiresAt DateTime @map("expires_at") @db.Timestamp

  modlog Modlog @relation(fields: [modlogId], references: [id])

  @@map("moderation_tasks")
}
